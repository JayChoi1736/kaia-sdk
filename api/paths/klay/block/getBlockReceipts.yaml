openapi: "3.0.2"
info:
  title: KLAY OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /klay/getBlockReceipts:
    post:
      operationId: getBlockReceipts
      summary: "[getBlockReceipts]"
      description: |
        Returns receipts included in a block identified by block hash.

        **JSONRPC:** `klay_getBlockReceipts`

      tags:
        - klay

      parameters:
        - name: hashOfBlock
          required: true
          schema:
            type: string
            format: 32-byte DATA
          description: Hash of a block
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/KlayGetBlockReceiptsReq"

      responses:
        200:
          description: Receipts included in a block. If the target block contains no transaction, an empty array [] is returned.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/KlayGetBlockReceiptsResp"

      x-codeSamples:
        - lang: "curl"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klay/block/getBlockReceipts.sh"
        # - lang: "java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        - lang: "javascript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/klay/block/getBlockReceipts.js"
        - lang: "python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/klay/block/getBlockReceipts.py"

components:
  schemas:
    KlayGetBlockReceiptsReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'klay_getBlockReceipts'
        params:
          type: array
          description: Hash of a block
          items:
              type: string
              title: HashOfBlock
              format: 32-byte DATA
              description: Hash of a block.
          example:  ["0xdc762ed0274496e2a42278e2648d910d82468687b5415bb5eb058a96a0b93c30"]

    KlayGetBlockReceiptsResp:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/BlockReceipts"

    BlockReceipts:
      type: object
      description: A Block Receipts
      properties:
        blockHash:
          type: string
          format: 32-byte DATA
        blockNumber:
          type: string
          format: hex
        contractAddress:
          type: string
          format: 20-byte DATA
        effectiveGasPrice:
          type: string
          format: hex
        from:
          type: string
          format: 20-byte DATA
        gas:
          type: string
          format: hex
        gasPrice:
          type: string
          format: hex
        gasUsed:
          type: string
          format: hex
        logs:
          type: array
          items:
            type: object
        logsBloom:
          type: string
          format: 256-byte DATA
        nonce:
          type: string
          format: hex
        senderTxHash:
          type: string
          format: 32-byte DATA
        signatures:
          type: array
          items:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/Signature"
        status:
          type: string
          format: hex
        to:
          type: string
          format: 20-byte DATA
        transactionHash:
          type: string
          format: 32-byte DATA
        transactionIndex:
          type: string
          format: hex
        type:
          type: string
          format: 256-byte DATA
        typeInt:
          type: integer
        value:
          type: string
          format: hex
      example:
        {
          "blockHash": "0xdc762ed0274496e2a42278e2648d910d82468687b5415bb5eb058a96a0b93c30",
          "blockNumber": "0x3ba38",
          "contractAddress": null,
          "effectiveGasPrice": "0x5d21dba00",
          "from": "0x16b11cf9c2186a117b0da38315b42b1eaa03bbe5",
          "gas": "0x30d40",
          "gasPrice": "0xba43b7400",
          "gasUsed": "0x1886c",
          "logs": [ ],
          "logsBloom": "0x
          "nonce": "0x58e",
          "senderTxHash": "0x234469b3d3222657c98904deaba7ec6613161ea9405275025f4784a4d9918af5",
          "signatures": [ "0x7f6","0x50b2b0f95b8a6d7018369b1933d6cebb52ef119463d1840a6181d05bf8fc29d8","0x329630f88d9d06c5f1bd7644dbf6bd6b92e4ab0e3d47122972f8294c9289e7bb" ],
          "status": "0x1",
          "to": "0xdbb98c72e9818ad2c93a09e35ad43ada0d4223f0",
          "transactionHash": "0x234469b3d3222657c98904deaba7ec6613161ea9405275025f4784a4d9918af5",
          "transactionIndex": "0x0",
          "type": "TxTypeValueTransfer",
          "typeInt": 8,
          "value": "0x21e19e0c9bab2400000"
        }
