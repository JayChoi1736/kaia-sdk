openapi: "3.0.2"
info:
  title: KLAY OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /klay/getBlockByHash:
    post:
      operationId: getBlockByHash
      summary: "[getBlockByHash]"
      description: |
        Returns information about a block by hash. This API works only on RPC call, not on JavaScript console.
        
        **JSONRPC:** `klay_getBlockByHash`

      tags:
        - klay

      parameters:
        - name: hashOfBlock
          required: true
          schema:
            type: string
            format: 32-byte DATA
          description: Hash of a block
          in: query
        - name: returnTransactionObject
          in: query
          description: If true it returns the full transaction objects, if false only the hashes of the transactions.
          required: true
          schema:
            type: boolean

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/KlayGetBlockByHashReq"

      responses:
        200:
          description: Returns information about a block by hash
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/KlayGetBlockByHashResp"

      externalDocs:
        url: https://docs.klaytn.foundation/content/dapp/json-rpc/api-references/klay/block#klay_getblockbyhash
        description: Klaytn Docs
      x-codeSamples:
        - lang: "curl"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klay/block/getBlockByHash.sh"
        # - lang: "java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        #- lang: "javascript"
        #  label: "Javascript"
        #  source:
        #    $ref: ""
        #- lang: "python"
        #  label: "Python"
        #  source:
        #    $ref: ""

components:
  schemas:
    KlayGetBlockByHashReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'klay_getBlockByHash'
        params:
          type: array
          items:
            anyOf:
              - type: string
                title: hashOfBlock
                format: 32-byte DATA
                description: Hash of a block.
              - type: boolean
                title: returnTransactionObject
                description: If true it returns the full transaction objects, if false only the hashes of the transactions.
          example:  ["0xb8deae63002d2b6aa33247c8ef545383ee0fd2282ac9b49dbbb74114389ddb5c", true]

    KlayGetBlockByHashResp:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Block"

    Block:
      type: object
      description: A block object
      properties:
        number:
          type: string
          format: hex
          description: The block number. null when its pending block.
        hash:
          type: string
          format: 32-byte DATA
          description: Hash of the block. null when its pending block.
        parentHash:
          type: string
          format: 32-byte DATA
          description: Hash of the parent block.
        logsBloom:
          type: string
          format: 256-byte DATA
          description: The bloom filter for the logs of the block. null when it is pending block.
        transactionsRoot:
          type: string
          format: 32-byte DATA
          description: The root of the transaction trie of the block.
        stateRoot:
          type: string
          format: 32-byte DATA
          description: The root of the final state trie of the block.
        receiptsRoot:
          type: string
          format: 32-byte DATA
          description: The root of the receipts trie of the block.
        reward:
          type: string
          format: 20-byte DATA
          description: The address of the beneficiary to whom the block rewards were given.
        blockScore:
          type: string
          format: hex
          description: Former difficulty. Always 1 in the BFT consensus engine
        totalBlockScore:
          type: string
          format: hex
          description: Integer of the total blockScore of the chain until this block.
        extraData:
          type: string
          format: DATA
          description: The "extra data" field of this block.
        size:
          type: string
          format: hex
          description: Integer the size of this block in bytes.
        gasUsed:
          type: string
          format: hex
          description: The total used gas by all transactions in this block.
        timestamp:
          type: string
          format: hex
          description: The unix timestamp for when the block was collated.
        timestampFoS:
          type: string
          format: hex
          description: The fraction of a second of the timestamp for when the block was collated.
        transactions:
          type: array
          items:
            anyOf:
              - type: string
                format: 32-byte DATA
                description: Hash of a transaction.
              - type: object
                description: transaction objects
          description: Array of transaction objects, or 32-byte transaction hashes depending on the last given parameter.
        governanceData:
          type: string
          format: DATA
          description: RLP encoded governance configuration
        voteData:
          type: string
          format: DATA
          description: RLP encoded governance vote of the proposer
        baseFeePerGas:
          type: string
          format: hex
          description: The base fee per gas. It has a meaningful value when EthTxTypeCompatible and Magma hardforks are activated.
      example:
        {
          "baseFeePerGas": "0x0",
          "blockscore": "0x1",
          "extraData": "0xda83010800846b6c617989676f312e31362e31338664617277696e0000000000f89ed5949712f943b296758aaae79944ec975884188d3a96b841ddfdf7e2cb0a93538f757f87f23a93ee35df703c781c6f15e31e4978ecdfb3501fc00924372b9a01df2bc452f2a924c242d83580183d131c47e49a25b78f625201f843b841b9b6034d5a8c5f5b057274cda4f427614cd1f448ee781f4c4322861d1361d09d47d6030f2b69a26cb426db984f54e71f8c112fbf882930ccd715d595e8d8307500",
          "gasUsed": "0x0",
          "governanceData": "0x",
          "hash": "0xe882d7a16f38126dc0c507f990b3fe18fa2d3a380002538581327abe96ca6edc",
          "logsBloom": "0x
          "number": "0x1e67",
          "parentHash": "0x28b1c054346c3bd083741c757a750dcabf94b6d50c7f87158753544e96e73550",
          "receiptsRoot": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
          "reward": "0x4b2c736fd05c2e2da3ccbd001a395a444f16a861",
          "size": "0x272",
          "stateRoot": "0xdf9885621c9e6e75912ca94d6987bcb1b54fef0e4a99cbec5e68f1ffc7468a78",
          "timestamp": "0x62130beb",
          "timestampFoS": "0x0",
          "totalBlockScore": "0x1e68",
          "transactions": [ ],
          "transactionsRoot": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
          "voteData": "0x"
        }
