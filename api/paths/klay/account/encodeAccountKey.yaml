openapi: "3.0.2"
info:
  title: KLAY OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /klay/encodeAccountKey:
    post:
      operationId: klayEncodeAccountKey
      summary: "[encodeAccountKey] Decodes an RLP encoded account key."
      description: |
        Encodes an account key using the Recursive Length Prefix (RLP) encoding scheme.

        **JSONRPC:** `klay_encodeAccountKey`
      tags:
        - klay.account

      parameters:
        - name: encodedAccountKey
          in: query
          description: RLP encoded account key
          required: true
          schema:
            type: string
            format: DATA

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/KlayEncodeAccountKeyReq"

      responses:
        200:
          description: Return RLP encoded account key
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/KlayEncodeAccountKeyResp"

      externalDocs:
        url: https://docs.klaytn.foundation/content/dapp/json-rpc/api-references/klay/account#klay_encodeaccountkey
        description: Klaytn Docs
      x-codeSamples:
        - lang: "curl"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klay/account/encodeAccountKey.sh"
        # - lang: "java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        #- lang: "javascript"
        #  label: "Javascript"
        #  source:
        #    $ref: ""
        #- lang: "python"
        #  label: "Python"
        #  source:
        #    $ref: ""

components:
  schemas:
    KlayEncodeAccountKeyReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'klay_encodeAccountKey'
        param:
          type: object
          properties:
            keytype:
              type: number
              description: "Integer value indicating account key type."
            key:
              type: string
              format: JSON DATA
              description: "Account key object"
          example: {"keyType": 1, "key": {}}

    KlayEncodeAccountKeyResp:
      type: object
      properties:
        result:
          type: string
          description: RLP encoded account key
          format: DATA
          example: "0x01c0"
