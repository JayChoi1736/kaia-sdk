openapi: "3.0.2"
info:
  title: KLAY OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /klay/getLogs:
    post:
      operationId: getLogs
      summary: "[getLogs]"
      description: |
        Returns an array of all logs matching a given filter object.

        The execution of this API can be limited by two node configurations to manage resources of Klaytn node safely.

        -The number of maximum returned results in a single query (Default: 10,000).

        -The execution duration limit of a single query (Default: 10 seconds).

        **JSONRPC:** `klay_getLogs`

      tags:
        - klay

      parameters:
        - name: filterOptions
          required: true
          schema:
            $ref: "#/components/schemas/FilterOptions"
          description: The filter options.
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - type: object
                  properties:
                    method:
                      type: string
                      default: "klay_getLogs"
                    params:
                      type: array
                      items:
                        $ref: "#/components/schemas/FilterOptions"
                      description: The filter options.
                      example:
                        [
                          {
                            "fromBlock": "0x1",
                            "toBlock": "latest",
                            "address": "0x87ac99835e67168d4f9a40580f8f5c33550ba88b",
                          },
                        ]

      responses:
        200:
          description: Array - Array of log objects, or an empty array if nothing has changed since last poll.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/KlayGetLogsResp"

      x-codeSamples:
        - lang: "curl"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klay/filter/getLogs.sh"
        # - lang: "java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        - lang: "javascript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/klay/filter/getLogs.js"
        - lang: "python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/klay/filter/getLogs.py"

components:
  schemas:
    KlayGetLogsResp:
      type: object
      properties:
        result:
          $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/KlayArrayOfLog"

    FilterOptions:
      type: object
      properties:
        fromBlock:
          allOf:
            - title: "fromBlock"
            - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
        toBlock:
          allOf:
            - title: "toBlock"
            - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
        address:
          oneOf:
            - type: string
              format: 20-byte DATA
              description: (optional) Contract address or a list of addresses from which logs should originate.
            - type: array
              items:
                type: string
                format: 20-byte DATA
              description: (optional) Contract address or a list of addresses from which logs should originate.
        topics:
          type: array
          items:
            type: string
            format: 32-byte DATA
          description: (optional) Array of 32-byte DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with “or” options.
        blockHash:
          type: string
          format: 32-byte DATA
          description: (optional) A filter option that restricts the logs returned to the single block with the 32-byte hash blockHash. Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in in the filter criteria, then neither fromBlock nor toBlock are allowed
