openapi: "3.0.2"
info:
  title: Klay Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /debug/standardTraceBlockToFile:
    post:
      summary: "[standardTraceBlockToFile]"
      tags:
        - debug
      operationId: standardTraceBlockToFile
      description: |
        Similar to debug_traceBlock, standardTraceBlockToFile accepts a block hash and will replay the block that is already present in the database. It returns a list of file names containing tracing result. Note that the files will be stored in the machine that serves this API.

        **JSONRPC:** `debug_standardTraceBlockToFile`

      parameters:
        - name: hash
          in: query
          description: Hash of a block.
          required: true
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockHash"
        - name: options
          in: query
          description: Standard tracing options.
          required: false
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/StandardTracingOptions"

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/DebugStandardTraceBlockToFileReq"

      responses:
        200:
          description: A list of file names.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/DebugStandardTraceBlockToFileResp"

      x-codeSamples:
        - lang: "curl"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klaytnDebug/vMStandardTracing/standardTraceBlockToFile.sh"
#        - lang: "java"
#          label: "Java"
#          source:
#            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/eth/account/EthAccountsExample.java"
        - lang: "javascript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/klaytnDebug/vMStandardTracing/standardTraceBlockToFile.js"
#        - lang: "python"
#          label: "Python"
#          source:
#            $ref: "../../../code-samples/python/eth/account/accounts.py"

components:
  schemas:
    DebugStandardTraceBlockToFileReq:
      type: object
      properties:
        method:
          type: string
          default: debug_standardTraceBlockToFile
        params:
          type: array
          items:
            anyOf:
              - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockHash"
              - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/StandardTracingOptions"
          example: ["0x485fff444481ee28debe50639f312f44e0a09342161a8906a99cf325cc2512a4"]

    DebugStandardTraceBlockToFileResp:
      type: object
      properties:
        result:
          type: array
          description: A list of file names. Each represents a tracing result of a transaction. The format of a file name is block_{first 4 bytes of the block hash}-{transaction index}-{first 4 bytes of the transaction hash}-{random string}.
          items:
            type: string
          example: ["/var/folders/v9/z3vq7j4d42b2jq_vxsv0km6h0000gn/T/block_0x485fff44-0-0xfe8210fc-141224302"]