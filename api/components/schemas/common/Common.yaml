components:
  schemas:
    BlockNumberOrTag:
      oneOf:
        - $ref: "#/components/schemas/IntegerBlockNumber"
        - $ref: "#/components/schemas/HexadecimalBlockNumber"
        - $ref: "#/components/schemas/BlockTag"

    BlockNumberOrHashOrTag:
      oneOf:
        - $ref: "#/components/schemas/IntegerBlockNumber"
        - $ref: "#/components/schemas/HexadecimalBlockNumber"
        - $ref: "#/components/schemas/BlockTag"
        - $ref: "#/components/schemas/BlockHash"

    IntegerBlockNumber:
      description: the block number with type integer
      type: number

    HexadecimalBlockNumber:
      type: string
      format: hexadecimal
      description: the block number with type hexadecimal

    BlockTag:
      type: string
      description: the block tag [latest, pending, earliest]

    BlockHash:
      type: string
      description: the block hash

    Address:
      type: string
      format: 20-byte DATA
      description: Address

    CallObject:
      type: object
      description: The transaction call object. See the next table for the object's properties.
      properties:
        from:
          type: string
          format: 20-byte DATA
          description: (optional) Address the transaction is simulated to have been sent from. The 0x00..0 address is used if no address is specified.
        to:
          type: string
          format: 20-byte DATA
          description: (optional) Address the transaction is sent to.
        gas:
          type: integer
          format: int64
          description: (optional) Maximum gas allowance for the code execution to avoid infinite loops. Defaults to 2^63 or whatever value the node operator specified via --rpc.gascap.
        gasPrice:
          type: integer
          format: int64
          description: (optional) Number of peb to simulate paying for each unit of gas during execution. Defaults to 0 peb.
        value:
          type: integer
          format: int64
          description: (optional) Amount of peb to simulate sending along with the transaction. Defaults to 0.
        input:
          type: string
          format: DATA
          description: (optional) Hash of the method signature and encoded parameter. It replaces data field, but 'data` field is still supported for backward compatibility.

    HeaderObject:
      type: object
      description: The block header object.
      properties:
        number:
          type: string
          format: hex
          description: The block number. null when its pending block.
        parentHash:
          type: string
          format: 32-byte DATA
          description: Hash of the parent block.
        logsBloom:
          type: string
          format: 256-byte DATA
          description: The bloom filter for the logs of the block. null when it is pending block.
        transactionsRoot:
          type: string
          format: 32-byte DATA
          description: The root of the transaction trie of the block
        stateRoot:
            type: string
            format: 32-byte DATA
            description: The root of the final state trie of the block.
        receiptsRoot:
            type: string
            format: 32-byte DATA
            description: The root of the receipts trie of the block.
        reward:
            type: string
            format: 20-byte DATA
            description: The address of the beneficiary to whom the block rewards were given.
        blockScore:
            type: string
            format: hex
            description: Former difficulty. Always 1 in the BFT consensus engine
        extraData:
            type: string
            format: DATA
            description: The "extra data" field of this block.
        gasUsed:
            type: string
            format: hex
            description: The total used gas by all transactions in this block.
        timestamp:
            type: string
            format: hex
            description: The Unix timestamp for when the block was collated.
        timestampFoS:
            type: string
            format: hex
            description: The fraction of a second of the timestamp for when the block was collated.
        governanceData:
            type: string
            format: DATA
            description: RLP encoded governance configuration
        voteData:
            type: string
            format: DATA
            description: RLP encoded governance vote of the proposer
        baseFeePerGas:
            type: string
            format: hex
            description: The base fee per gas. It has a meaningful value when EthTxTypeCompatible and Magma hardforks are activated.
      example:
        {
          "baseFeePerGas": "0x5d21dba00",
          "blockScore": "0x1",
          "extraData": "0xda83010800846b6c617989676f312e31362e31338664617277696e0000000000f89ed5949712f943b296758aaae79944ec975884188d3a96b841ddfdf7e2cb0a93538f757f87f23a93ee35df703c781c6f15e31e4978ecdfb3501fc00924372b9a01df2bc452f2a924c242d83580183d131c47e49a25b78f625201f843b841b9b6034d5a8c5f5b057274cda4f427614cd1f448ee781f4c4322861d1361d09d47d6030f2b69a26cb426db984f54e71f8c112fbf882930ccd715d595e8d8307500",
          "gasUsed": "0x0",
          "governanceData": "0x",
          "hash": "0xe882d7a16f38126dc0c507f990b3fe18fa2d3a380002538581327abe96ca6edc",
          "logsBloom": "0x
          "number": "0x1e67",
          "parentHash": "0x28b1c054346c3bd083741c757a750dcabf94b6d50c7f87158753544e96e73550",
          "receiptsRoot": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
          "reward": "0x4b2c736fd05c2e2da3ccbd001a395a444f16a861",
          "stateRoot": "0xdf9885621c9e6e75912ca94d6987bcb1b54fef0e4a99cbec5e68f1ffc7468a78",
          "timestamp": "0x62130beb",
          "timestampFoS": "0x0",
          "transactionsRoot": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
        }


    LogObject:
      type: object
      description: For filters created with klay_newFilter logs are objects with following properties
      properties:
        removed:
          type: boolean
          description: true when the log was removed, due to a chain reorganization. false if its a valid log.
        logIndex:
          type: string
          format: QUANTITY
          description: Integer of the log index position in the block. null when its pending log.
        transactionIndex:
          type: string
          format: QUANTITY
          description: Integer of the transactions index position log was created from. null when its pending log.
        transactionHash:
          type: string
          format: 32-byte DATA
          description: Hash of the transactions this log was created from. null when pending.
        blockHash:
          type: string
          format: 32-byte DATA
          description: Hash of the block where this log was in. null when pending.
        blockNumber:
          type: string
          format: QUANTITY
          description: The block number where this log was in. null when pending.
        address:
          type: string
          format: 20-byte DATA
          description: Address from which this log originated.
        data:
          type: string
          format: DATA
          description: Contains the non-indexed arguments of the log.
        topics:
          type: array
          items:
            type: string
            format: 32-byte DATA
          description: Array of 0 to 4 32-byte DATA of indexed log arguments. (In Solidity The first topic is the hash of the signature of the event (e.g., Deposit(address,bytes32,uint256)), except you declared the event with the anonymous specifier.).

    ArrayOfLog:
      type: array
      items:
        anyOf:
          - type: string
            format: 32-byte DATA
            description: For filters created with klay_newBlockFilter, the return are block hashes (32-byte DATA), e.g., ["0x3454645634534..."].
          - type: string
            format: 32-byte DATA
            description: For filters created with klay_newPendingTransactionFilter, the return are transaction hashes (32-byte DATA), e.g., ["0x6345343454645..."].
          - $ref: "#/components/schemas/LogObject"
      description: Array of log objects, or an empty array if nothing has changed since last poll.

    TransactionObject:
      type: object
      description: Transaction object
      properties:
        blockHash:
          type: string
          format: 32-byte DATA
          description: Hash of the block where this transaction was in. null when its pending.
        blockNumber:
          type: string
          format: hex
          description: Block number where this transaction was in. null when its pending.
        codeFormat:
            type: string
            description: (optional) The code format of smart contract code.
            required: false
        feePayer:
            type: string
            format: 20-byte DATA
            description: (optional) Address of the fee payer.
            required: false
        feePayerSignatures:
            type: array
            items:
              type: object
            description: (optional) An array of fee payer's signature objects. A signature object contains three fields (V, R, and S). V contains ECDSA recovery id. R contains ECDSA signature r while S contains ECDSA signature s.
            required: false
        feeRatio:
            type: string
            format: hex
            description: (optional) Fee ratio of the fee payer. If it is 30, 30% of the fee will be paid by the fee payer. 70% will be paid by the sender.
            required: false
        from:
            type: string
            format: 20-byte DATA
            description: Address of the sender.
        gas:
            type: string
            format: hex
            description: Gas provided by the sender.
        gasPrice:
            type: string
            format: hex
            description: Gas price provided by the sender in peb.
        hash:
            type: string
            format: 32-byte DATA
            description: Hash of the transaction.
        humanReadable:
            type: boolean
            description: (optional) true if the address is humanReadable, false if the address is not humanReadable.
            required: false
        key:
            type: string
            description: (optional) Key of the newly created account.
            required: false
        input:
            type: string
            format: DATA
            description: (optional) The data sent along with the transaction.
            required: false
        nonce:
            type: string
            format: hex
            description: The number of transactions made by the sender prior to this one.
        senderTxHash:
            type: string
            format: 32-byte DATA
            description: Hash of a transaction that is signed only by the sender. See SenderTxHash. This value is always the same as hash for non fee-delegated transactions.
        signatures:
            type: array
            items:
              type: object
            description: An array of signature objects. A signature object contains three fields (V, R, and S). V contains ECDSA recovery id. R contains ECDSA signature r while S contains ECDSA signature s
        to:
            type: string
            format: 20-byte DATA
            description: Address of the receiver. null when it is a contract creation transaction.
        transactionIndex:
            type: string
            format: hex
            description: Integer of the transactions index position in the block. null when its pending.
        type:
           type: string
           description: A string representing the type of the transaction.
        typeInt:
          type: number
          description: An integer representing the type of the transaction.
        value:
          type: string
          format: hex
          description: Value transferred in peb.
      example:
          {
            "blockHash": "0x4d97cf1f686a925ed4f1ad42c635cedb54974fe23a2941c7825e1ed3163c0e41",
            "blockNumber": "0x7008",
            "feePayer": "0xa9d2cc2bb853163b6eadfb6f962d72f7e00bc2e6",
            "feePayerSignatures": [
              {
                "V": "0x4e44",
                "R": "0xa665e17d92e1c671c8b062cecb19790d49138a21854fc15c460c91035b1884e",
                "S": "0x17165688acc01736f1221a39399e3aac7e1ece14731fcab31631e3e4a59b7441"
              }
            ],
            "from": "0xab0833d744a8943fe3c783f9cc70c13cbd70fcf4",
            "gas": "0xdbba0",
            "gasPrice": "0x5d21dba00",
            "hash": "0xaca5d9a1ed8b86b1ef61431b2bedfc99a66eaefc3a7e1cffdf9ff53653956a67",
            "nonce": "0x26",
            "senderTxHash": "0x18fe9e1007da7d20aad77778557fb8acc58c80054daba65124c8c843aadd3478",
            "signatures": [
              {
                "V": "0x4e44",
                "R": "0x1b6bb3d996d903d0528565d13e8d9d122b2220ed09c5baf384114193a6977027",
                "S": "0x20c506ce9f1bdd42183c40c44f414a3930f339f856e8be3cfcdf5ca0852fd378"
              }
            ],
            "to": "0x15a9119104e1bf0ec6d408b3cc188685e4402a2c",
            "transactionIndex": "0x0",
            "type": "TxTypeFeeDelegatedValueTransfer",
            "typeInt": 9,
            "value": "0x1"
          }
