components:
  schemas:
    KlayGetBlockByNumberReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'klay_getBlockByNumber'
        params:
          type: array
          items:
            anyOf:
              - $ref: "../../../../components/schemas/common/Common.yaml#/components/schemas/Address"
              - type: boolean
                description: If true it returns the full transaction objects, if false only the hashes of the transactions.
          example:  ["0x3111a0577f322e8fb54f78d9982a26ae7ca0f722", "latest"]

    KlayGetBlockByNumberResp:
      type: object
      properties:
        result:
          type: object
          properties:
            number:
              type: number
              format: QUANTITY
              description: The block number. null when it is pending block.
            hash:
              type: string
              format: 32-byte DATA
              description: Hash of the block. null when it is pending block.
            parentHash:
              type: string
              format: 32-byte DATA
              description: Hash of the parent block.
            logsBloom:
              type: string
              format: 256-byte DATA
              description: The bloom filter for the logs of the block. null when it is pending block.
            transactionsRoot:
              type: string
              format: 32-byte DATA
              description: The root of the transaction trie of the block.
            stateRoot:
              type: string
              format: 32-byte DATA
              description: The root of the final state trie of the block.
            receiptsRoot:
              type: string
              format: 32-byte DATA
              description: The root of the receipts trie of the block.
            reward:
              type: string
              format: 20-byte DATA
              description: The address of the beneficiary to whom the block rewards were given.
            blockScore:
              type: string
              format: QUANTITY
              description: Former difficulty. Always 1 in the BFT consensus engine
            extraData:
              type: string
              format: DATA
              description: The "extra data" field of this block.
            size:
              type: string
              format: QUANTITY
              description: size
            gasUsed:
              type: string
              format: QUANTITY
              description: The total used gas by all transactions in this block.
            timestamp:
              type: string
              format: QUANTITY
              description: The Unix timestamp for when the block was collated.
            timestampFoS:
              type: string
              format: QUANTITY
              description: The fraction of a second of the timestamp for when the block was collated.
            transactions:
              type: string
              format: array
              description: Array of transaction objects, or 32-byte transaction hashes depending on the last given parameter.
            governanceData:
              type: string
              format: DATA
              description: RLP encoded governance configuration
            voteData:
              type: string
              format: DATA
              description: RLP encoded governance vote of the proposer
            baseFeePerGas:
              type: string
              format: QUANTITY
              description: The base fee per gas. It has a meaningful value when EthTxTypeCompatible and Magma hardforks are activated.
          example:
            {
              "baseFeePerGas":"0x0",
              "blockscore":"0x1",
              "extraData":"0xda83010800846b6c617989676f312e31362e31338664617277696e0000000000f89ed5949712f943b296758aaae79944ec975884188d3a96b841ddfdf7e2cb0a93538f757f87f23a93ee35df703c781c6f15e31e4978ecdfb3501fc00924372b9a01df2bc452f2a924c242d83580183d131c47e49a25b78f625201f843b841b9b6034d5a8c5f5b057274cda4f427614cd1f448ee781f4c4322861d1361d09d47d6030f2b69a26cb426db984f54e71f8c112fbf882930ccd715d595e8d8307500",
              "gasUsed":"0x0",
              "governanceData":"0x",
              "hash":"0xe882d7a16f38126dc0c507f990b3fe18fa2d3a380002538581327abe96ca6edc",
              "logsBloom":"0x
              "number":"0x1e67",
              "parentHash":"0x28b1c054346c3bd083741c757a750dcabf94b6d50c7f87158753544e96e73550",
              "receiptsRoot":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
              "reward":"0x4b2c736fd05c2e2da3ccbd001a395a444f16a861",
              "size":"0x272",
              "stateRoot":"0xdf9885621c9e6e75912ca94d6987bcb1b54fef0e4a99cbec5e68f1ffc7468a78",
              "timestamp":"0x62130beb",
              "timestampFoS":"0x0",
              "totalBlockScore":"0x1e68",
              "transactions":[],
              "transactionsRoot":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
              "voteData":"0x"
            }
