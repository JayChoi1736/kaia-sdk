{{>licenseInfo}}
package {{package}};

import java.math.BigDecimal;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.ScheduledExecutorService;

import org.web3j.protocol.Web3jService;
import org.web3j.protocol.core.Request;
import org.web3j.utils.Async;

import {{modelPackage}}.*;

public class {{classname}} {
    public static final int DEFAULT_BLOCK_TIME = 15 * 1000;

    protected final Web3jService web3jService;
    private final long blockTime;
    private final ScheduledExecutorService scheduledExecutorService;

    public {{classname}}(Web3jService web3jService) {
        this(web3jService, DEFAULT_BLOCK_TIME, Async.defaultExecutorService());
    }

    public {{classname}}(
            Web3jService web3jService,
            long pollingInterval,
            ScheduledExecutorService scheduledExecutorService) {
        this.web3jService = web3jService;
        this.blockTime = pollingInterval;
        this.scheduledExecutorService = scheduledExecutorService;
    }

    /**
     * Construct a new Web3j instance.
     *
     * @param web3jService web3j service instance - i.e. HTTP or IPC
     * @return new Web3j instance
     */
    static {{classname}} build(Web3jService web3jService) {
        return new {{classname}}(web3jService);
    }

    /**
     * Construct a new Web3j instance.
     *
     * @param web3jService web3j service instance - i.e. HTTP or IPC
     * @param pollingInterval polling interval for responses from network nodes
     * @param scheduledExecutorService executor service to use for scheduled tasks. <strong>You are
     *     responsible for terminating this thread pool</strong>
     * @return new Web3j instance
     */
    static {{classname}} build(
            Web3jService web3jService,
            long pollingInterval,
            ScheduledExecutorService scheduledExecutorService) {
        return new {{classname}}(web3jService, pollingInterval, scheduledExecutorService);
    }

    String namespace = "{{#lambda.lowercase}}{{{baseName}}}{{/lambda.lowercase}}";
    {{#operations}}
    {{#operation}}
        {{#queryParams}}{{#-last}}
    public Request<?,{{{returnType}}}> {{operationId}}({{#queryParams}}{{^-first}}, {{/-first}}Object {{{paramName}}}{{/queryParams}}) {
        return new Request<>(namespace+"_{{operationId}}", Arrays.asList({{#queryParams}}{{^-first}}, {{/-first}}{{{paramName}}}{{/queryParams}}), web3jService, {{{returnType}}}.class);
    }
        {{/-last}}{{/queryParams}}
        {{#queryParams}}
        {{#vendorExtensions.x-default-latest}}
    public Request<?,{{{returnType}}}> {{operationId}}({{#queryParams}}{{#-first}}{{#vendorExtensions.x-default-latest}}{{#queryParams}}{{^vendorExtensions.x-default-latest}}Object {{{paramName}}}{{^-last}}, {{/-last}}{{/vendorExtensions.x-default-latest}}{{/queryParams}}{{/vendorExtensions.x-default-latest}}{{^vendorExtensions.x-default-latest}}{{#queryParams}}{{^vendorExtensions.x-default-latest}}{{^-first}}, {{/-first}}Object {{{paramName}}}{{/vendorExtensions.x-default-latest}}{{/queryParams}}{{/vendorExtensions.x-default-latest}}{{/-first}}{{/queryParams}}) {
        return new Request<>(namespace+"_{{operationId}}", Arrays.asList({{#queryParams}}{{^vendorExtensions.x-default-latest}}{{{paramName}}}{{^-last}}, {{/-last}}{{/vendorExtensions.x-default-latest}}{{#vendorExtensions.x-default-latest}}"latest"{{^-last}}, {{/-last}}{{/vendorExtensions.x-default-latest}}{{/queryParams}}), web3jService, {{{returnType}}}.class);
    }
        {{/vendorExtensions.x-default-latest}}
        {{/queryParams}}
        {{^queryParams}}
    public Request<?,{{{returnType}}}> {{operationId}}() {
        return new Request<>(namespace+"_{{operationId}}", Arrays.asList(), web3jService, {{{returnType}}}.class);
    }
        {{/queryParams}}
    {{/operation}}
    {{/operations}}
}